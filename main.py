import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Sistema de Predicciones Meteorol√≥gicas - Papallacta",
    page_icon="üîÆ",
    layout="wide",
    initial_sidebar_state="expanded"
)

def main():
    # T√≠tulo principal
    st.title("üîÆ Sistema de Predicciones Meteorol√≥gicas e Hidrol√≥gicas")
    st.markdown("### Estaci√≥n Papallacta - M√≥dulo de Forecasting")
    st.markdown("---")
    
    # Sidebar para navegaci√≥n
    st.sidebar.title("üß≠ Navegaci√≥n")
    
    # Opciones del men√∫ (forecasting, mapas e info)
    menu_options = {
        "üîÆ Predicciones (Forecasting)": "forecasting",
        "üó∫Ô∏è Mapas Meteorol√≥gicos": "maps",
        "üìö Informaci√≥n del Sistema": "info"
    }
    
    selected_option = st.sidebar.selectbox(
        "Selecciona una opci√≥n:",
        list(menu_options.keys()),
        index=0  # Por defecto, mostrar forecasting
    )
    
    # Ejecutar la opci√≥n seleccionada
    option_key = menu_options[selected_option]
    
    if option_key == "forecasting":
        # Importar y ejecutar m√≥dulo de forecasting
        try:
            from forecast_module import run_forecast_module
            run_forecast_module()
        except ImportError as e:
            st.error(f"Error al cargar el m√≥dulo de forecasting: {e}")
            st.info("Aseg√∫rate de que todas las dependencias est√©n instaladas: `pip install -r requirements.txt`")
        except Exception as e:
            st.error(f"Error inesperado en forecasting: {e}")
    
    elif option_key == "maps":
        # Importar y ejecutar m√≥dulo de mapas
        try:
            from maps_module import show_maps_interface
            show_maps_interface()
        except ImportError as e:
            st.error(f"Error al cargar el m√≥dulo de mapas: {e}")
            st.info("Para usar mapas, instala: `pip install folium streamlit-folium`")
        except Exception as e:
            st.error(f"Error inesperado en mapas: {e}")
    
    elif option_key == "info":
        show_system_info()

def show_system_info():
    """Muestra informaci√≥n del sistema"""
    st.header("üìö Informaci√≥n del Sistema de Predicciones")
    
    st.markdown("""
    ## üåü Descripci√≥n General
    
    Este sistema proporciona herramientas especializadas para el **forecasting (predicci√≥n)** de datos 
    meteorol√≥gicos e hidrol√≥gicos de la estaci√≥n Papallacta.
    
    ### üîÆ M√≥dulo de Predicciones
    - **Forecasting a corto y largo plazo** (hasta 2 a√±os)
    - **M√∫ltiples algoritmos** de predicci√≥n:
      - **Regresi√≥n Lineal**: Predicciones basadas en tendencias lineales
      - **Naive Estacional**: Predicciones simples basadas en patrones estacionales
      - **Promedio M√≥vil**: Predicciones suavizadas usando promedios m√≥viles
      - **Regresi√≥n Polinomial**: Predicciones con tendencias no lineales (opcional)
      - **ML Estacional**: Machine Learning con componentes estacionales (opcional)
    - **Validaci√≥n 80/20**: M√©tricas reales de precisi√≥n usando datos de prueba
    - **Intervalos de confianza** para todas las predicciones
    - **Comparaci√≥n de m√©todos** en un solo gr√°fico
    - **Exportaci√≥n de resultados** en formato CSV
    - **M√©tricas de evaluaci√≥n**: MAE, RMSE, MAPE, R¬≤
    
    ### üó∫Ô∏è M√≥dulo de Mapas
    - **Mapas Base**: Visualizaci√≥n geogr√°fica con diferentes estilos
    - **Mapas de Calor**: Representaci√≥n de intensidad de variables
    - **Mapas de Marcadores**: Ubicaci√≥n y datos de estaciones meteorol√≥gicas
    - **Mapas Tem√°ticos**: Capas superpuestas (precipitaci√≥n, temperatura, topograf√≠a)
    - **Interactividad**: Zoom, clic, tooltips y popups informativos
    - **M√∫ltiples estilos**: OpenStreetMap, CartoDB, Stamen
    - **Simulaci√≥n de datos**: Demostraci√≥n con datos meteorol√≥gicos simulados
    
    ## üìà Variables Disponibles para Predicci√≥n
    
    ### Hidrol√≥gicas
    - **Caudal** (m¬≥/s)
    - **Nivel de Agua** (m)
    
    ### Meteorol√≥gicas
    - **Temperatura Ambiente** (¬∞C)
    - **Precipitaci√≥n** (mm)
    - **Humedad Relativa** (%)
    - **Presi√≥n Atmosf√©rica** (hPa)
    - **Radiaci√≥n Solar** (W/m¬≤)
    - **Velocidad del Viento** (m/s)
    - **Direcci√≥n del Viento** (¬∞)
    
    ## üõ†Ô∏è Tecnolog√≠as Utilizadas
    
    - **Streamlit**: Framework para aplicaciones web interactivas
    - **Pandas**: Manipulaci√≥n y an√°lisis de datos
    - **Plotly**: Visualizaciones interactivas avanzadas
    - **NumPy**: C√°lculos num√©ricos eficientes
    - **Scikit-learn**: Machine learning para predicciones avanzadas (opcional)
    
    ## üöÄ Caracter√≠sticas del Sistema
    
    ### Predicciones Inteligentes
    - **Validaci√≥n autom√°tica** de la calidad de los datos
    - **Divisi√≥n 80/20** para entrenamiento y validaci√≥n
    - **Detecci√≥n autom√°tica** de patrones estacionales
    - **C√°lculo de m√©tricas** de precisi√≥n en tiempo real
    - **Intervalos de confianza** estad√≠sticamente fundamentados
    
    ### Interfaz de Usuario
    - **Selecci√≥n intuitiva** de variables y per√≠odos
    - **Controles personalizables** para cada m√©todo
    - **Visualizaciones interactivas** con zoom y pan
    - **Exportaci√≥n f√°cil** de resultados
    - **M√©tricas comparativas** entre m√©todos
    
    ## üìä Casos de Uso Espec√≠ficos
    
    1. **Predicci√≥n de caudales** para gesti√≥n de recursos h√≠dricos
    2. **Pron√≥stico de temperatura** para planificaci√≥n agr√≠cola
    3. **Predicci√≥n de precipitaci√≥n** para alertas tempranas
    4. **Forecasting de variables m√∫ltiples** para an√°lisis integral
    5. **Validaci√≥n de modelos** con m√©tricas robustas
    6. **Comparaci√≥n de algoritmos** para selecci√≥n √≥ptima
    
    ## üîß Instalaci√≥n y Uso
    
    ```bash
    # Instalar dependencias b√°sicas
    pip install streamlit pandas plotly numpy
    
    # Instalar dependencias opcionales para ML
    pip install scikit-learn
    
    # Ejecutar el sistema
    streamlit run main.py
    ```
    
    ## ÔøΩ M√©tricas de Evaluaci√≥n
    
    - **MAE (Mean Absolute Error)**: Error absoluto promedio
    - **RMSE (Root Mean Square Error)**: Ra√≠z del error cuadr√°tico medio
    - **MAPE (Mean Absolute Percentage Error)**: Error porcentual absoluto medio
    - **R¬≤ (Coeficiente de Determinaci√≥n)**: Calidad del ajuste del modelo
    - **Precisi√≥n (%)**: Porcentaje de precisi√≥n general del modelo
    
    ---
    
    **Sistema especializado en predicciones meteorol√≥gicas e hidrol√≥gicas** üîÆüìä
    """)
    
    # Mostrar estad√≠sticas del sistema
    st.subheader("üìä Estad√≠sticas del Sistema")
    
    try:
        import os
        datasets_path = "datasets_limpios"
        if os.path.exists(datasets_path):
            files = [f for f in os.listdir(datasets_path) if f.endswith('.csv')]
            
            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric("Datasets Disponibles", len(files))
            with col2:
                total_size = sum(os.path.getsize(os.path.join(datasets_path, f)) for f in files)
                st.metric("Tama√±o Total", f"{total_size / (1024*1024):.1f} MB")
            with col3:
                import pandas as pd
                total_records = 0
                for file in files:
                    try:
                        df = pd.read_csv(os.path.join(datasets_path, file))
                        total_records += len(df)
                    except:
                        pass
                st.metric("Registros Totales", f"{total_records:,}")
        else:
            st.warning("Carpeta 'datasets_limpios' no encontrada")
    
    except Exception as e:
        st.error(f"Error calculando estad√≠sticas: {e}")

if __name__ == "__main__":
    main()
